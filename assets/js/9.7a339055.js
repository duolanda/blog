(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{1120:function(t,s,a){"use strict";a.r(s);var n=a(11),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_1-前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[t._v("#")]),t._v(" 1.前言")]),t._v(" "),n("p",[t._v("揭秘 CRT startup code\n“生前”指的是"),n("code",[t._v("main()")]),t._v("之前的动作，“死后”指的是"),n("code",[t._v("main()")]),t._v("之后执行的动作")]),t._v(" "),n("p",[t._v("几个问题：")]),t._v(" "),n("ul",[n("li",[t._v("C++ 进入点是 main() 吗？")]),t._v(" "),n("li",[t._v("什么代码比 main() 更早被执行？")]),t._v(" "),n("li",[t._v("什么代码在 main() 结束后才被执行？")]),t._v(" "),n("li",[t._v("为什么上述代码可以如此行为？")]),t._v(" "),n("li",[t._v("Heap 的结构如何？")]),t._v(" "),n("li",[t._v("I/O 的结构如何？")])]),t._v(" "),n("p",[t._v("课程目标是彻底解决上述疑问")]),t._v(" "),n("p",[t._v("整个课程没有测试程序，但是会观察 VC6、VC10 的代码")]),t._v(" "),n("p",[t._v("推荐书籍：《程序员的自我修养：链接、装载与库》")]),t._v(" "),n("h1",{attrs:{id:"_2-startup-code-启动代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-startup-code-启动代码"}},[t._v("#")]),t._v(" 2.startup code（启动代码）")]),t._v(" "),n("h2",{attrs:{id:"_2-1-自定-startup-code-entry-point-symbol"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-自定-startup-code-entry-point-symbol"}},[t._v("#")]),t._v(" 2.1 自定 startup code（Entry-Point Symbol）")]),t._v(" "),n("p",[n("img",{attrs:{src:a(811),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("VC6 的自定义方法")]),t._v(" "),n("li",[t._v("除非你有把握能让 CRT 库正确初始化且 C++ 静态对象构造函数能正确执行，否则不要自己写 startup code")]),t._v(" "),n("li",[t._v("startup code 有三种可能形式，链接器会自动判断是哪种")])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<windows.h>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyStartup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    HANDLE crtHeap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("HeapCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAP_NO_SERIALIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x010")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4000")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("HeapAlloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("crtHeap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("HEAP_ZERO_MEMORY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0X010")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MessageBoxA")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcd"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("MB_OK"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])]),n("ul",[n("li",[t._v("自己写 startup code（只针对 Windows）")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(812),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("然后按照上一页的说明填入 Entry-point symbol")]),t._v(" "),n("li",[t._v("代码可以正常运行，但没什么用，而且因为没有调用"),n("code",[t._v("main()")]),t._v("也根本没有写"),n("code",[t._v("main()")]),t._v("，"),n("code",[t._v("main()")]),t._v("不会被执行")])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("$ cat entrypoint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c\n \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("blabla")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Yes it works!\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"not called!\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n$ gcc entrypoint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e blala    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-e：告诉链接器使用 balala 函数作为进入点")]),t._v("\n \n$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out\nYes it works"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//main 函数并没有执行")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("ul",[n("li",[t._v("Linux 下的启动码函数写法")])]),t._v(" "),n("p",[t._v("总结：任何的 C/C++ 程序，在"),n("code",[t._v("main()")]),t._v("之前，有一个启动代码函数，"),n("code",[t._v("main()")]),t._v("必须由启动代码函数调用起来，启动代码也是最早执行的函数。")]),t._v(" "),n("h2",{attrs:{id:"_2-2-startup-code-在哪"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-startup-code-在哪"}},[t._v("#")]),t._v(" 2.2 startup code 在哪")]),t._v(" "),n("p",[n("img",{attrs:{src:a(813),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("后面的代码都会在最上面写上文件名，方便你自己查找翻阅")]),t._v(" "),n("li",[t._v("VC6 下的三个文件都 include 了"),n("code",[t._v("crt0.c")]),t._v("，说明真正的 startup code 在"),n("code",[t._v("crt0.c")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(814),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("call stack")]),t._v(" "),n("li",[t._v("最下面的是最早调用起来的，"),n("code",[t._v("mainCRTStartup()")]),t._v("就是 Windows 下的启动代码函数，里面主要调用了 9 个动作，8 才进入"),n("code",[t._v("main()")])]),t._v(" "),n("li",[t._v("不只调用了这些函数，实际上还调用了更多，这里只把我们关注的部分列出来")])]),t._v(" "),n("h2",{attrs:{id:"_2-3-startup-code-源码摘要"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-startup-code-源码摘要"}},[t._v("#")]),t._v(" 2.3 startup code 源码摘要")]),t._v(" "),n("p",[n("img",{attrs:{src:a(815),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("不是完整代码，删节了不重要的部分")]),t._v(" "),n("li",[t._v("九个步骤分别为\n"),n("ul",[n("li",[t._v("1、 heap 的初始化")]),t._v(" "),n("li",[t._v("2、 io 的初始化")]),t._v(" "),n("li",[t._v("3-6、字符串的处理，比较琐碎")]),t._v(" "),n("li",[t._v("7、C 的初始化")]),t._v(" "),n("li",[t._v("8、进入"),n("code",[t._v("main()")])]),t._v(" "),n("li",[t._v("9、"),n("code",[t._v("exit()")])])])]),t._v(" "),n("li",[t._v("因为 calling convention，"),n("code",[t._v("main()")]),t._v("里传零个参数还是三个都传都可以")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(816),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("这页是为了说明完整代码中有很多的条件编译")])]),t._v(" "),n("h1",{attrs:{id:"_3-heap-init-startup-首要工程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-heap-init-startup-首要工程"}},[t._v("#")]),t._v(" 3._heap_init——startup 首要工程")]),t._v(" "),n("p",[n("img",{attrs:{src:a(817),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("和《C++ 内存管理机制》课程的第三讲有重合的地方")]),t._v(" "),n("li",[t._v("本课程特别的地方：startup code 处理字符串的详细观察数据，Windows Heap（操作系统层面）的结构和管理。")]),t._v(" "),n("li",[n("code",[t._v("__heap_init()")]),t._v("看起来没做什么，是因为等用户真正要求分配内存的时候，复杂的结构才会生成出来，而"),n("code",[t._v("ioinit()")]),t._v("就有要求分配内存的操作，于是我们观察它")])]),t._v(" "),n("p",[t._v("具体内存分配的部分和《C++ 内存管理机制》的 3.3、3.4 部分相同")]),t._v(" "),n("h1",{attrs:{id:"_4-main-生前所有内存分配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-main-生前所有内存分配"}},[t._v("#")]),t._v(" 4.main 生前所有内存分配")]),t._v(" "),n("p",[n("img",{attrs:{src:a(818),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[n("code",[t._v("_environ")]),t._v("是 pointer to pointer tabale（指针指向指针形成的表），table 中的每个 entry（元素）都是 pointer to string which represents an environment variable")]),t._v(" "),n("li",[t._v("把 "),n("code",[t._v("_environ")]),t._v(" 画成图，就是下一张图右下角的样子，本次测试中有 10 个环境变量")]),t._v(" "),n("li",[t._v("看左上角的图，00 00 00 00 前面都是"),n("code",[t._v("_environ")]),t._v("指向的指向字符串的指针（规定 0 为结束），而四个字节为一个指针，所以有 10 个。这 10 个都通过箭头一一对应了，没有问题，我们可以知道每个字符串的长度")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(819),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("验证一下分配的内存是否和字符串能对应上")]),t._v(" "),n("li",[n("code",[t._v("main()")]),t._v("之前的内存分配都通过断点观察到了")]),t._v(" "),n("li",[n("code",[t._v("_ioinit()")]),t._v("要了 256，加上 debug header、cookie，再调到 16 的倍数，就是 130h")]),t._v(" "),n("li",[n("code",[t._v("__crtGetEnvironmentStringA()")]),t._v("，要了 230h（前面 10 个环境变量加起来差不多是这么多，但不是正好是 230h），总共分了 240h。")]),t._v(" "),n("li",[n("code",[t._v("_setargv()")]),t._v("，命令行的 arg。命令行内容是"),n("code",[t._v("E:\\handout\\Test\\MallocFreeTest\\Debug\\MallocFreeTest.exe")]),t._v("，共 55 个字符，字符串长度是 56，可以看做"),n("code",[t._v("_environ")]),t._v("的简化版，只不过"),n("code",[t._v("_environ")]),t._v("有 10 个指针，这个只有 1 个。总大小是一根指针（4）+0（4）+字符串（56）= 100，加上 debug header 后是 100（64h），和下面可以对应。最后再加上 cookie 和调整 16 倍数后是 70h")]),t._v(" "),n("li",[n("code",[t._v("_setenvp()")]),t._v("，刚才"),n("code",[t._v("__crtGetEnvironmentStringA()")]),t._v("拿到一大块，"),n("code",[t._v("_setenvp()")]),t._v("要把这一大块切开来。引发了 11 次的内存分配，10 个环境变量+ 1 个 table。table 有 10 个指针和最后的 0，大小为 11*4+36（debug header）=80（50h），10 个字符串也与上一页完全吻合。前面要一大块把所有环境变量都拷贝过来，现在已经切割成 10 个字符串了，240h 已经功成身退，可以还了，于是 free")]),t._v(" "),n("li",[t._v("之前讲内存分配（《C++ 内存管理机制》3.4节）的时候，第一次 130h，第二次 240h，第三次 70h，其实都是 从这来的")]),t._v(" "),n("li",[t._v("可见，进入"),n("code",[t._v("main()")]),t._v("之前，CRT 已经做了许多工作，其中需要若干内存，因此当"),n("code",[t._v("main()")]),t._v("首次调用"),n("code",[t._v("malloc()")]),t._v("时，其实已经有若干内存块挂在 sbh 所维护的自由链表上了")])]),t._v(" "),n("h1",{attrs:{id:"_5-windows-heap-management"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-windows-heap-management"}},[t._v("#")]),t._v(" 5.Windows Heap Management")]),t._v(" "),n("p",[n("img",{attrs:{src:a(820),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("之前说 VC10 没有 sbh，把小区块管理交给操作系统了，所以我们来看一下 Windows Heap Management。这里没有源代码，但是可以观察，看看它有没有体现出 sbh 的关键特性")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(821),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("在 heap 起点偏移 178h 的地方，有 128 条双向链表")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(822),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("128 条双向链表，就是 128 对指针，0x390178 + 128 * (4*2) = 0x390578。之前 sbh 每个 group 里有 64 条自由链表，这里有 128 条，sbh 每条负责 16 字节，这里每条负责 8 字节")]),t._v(" "),n("li",[t._v("第一条链表的两根指针记录的地址是 00 39 1E A0（要倒过来看）")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(823),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("详细观察 00 39 1E A0，看看能否找到可以对应 sbh 的关键结构")]),t._v(" "),n("li",[t._v("free[1] 和 free[2] 的指针都是指向自己的，说明是空链表，没有挂任何 block")]),t._v(" "),n("li",[t._v("然后我们把 free[0] 指向的部分前后都抄过来。黄色部分就是 cookie，cookie 下面两根指针。但是这里只有上 cookie 没有下 cookie，但 cookie 记录了本块和前一块的大小，所以也可以做上下融合。自此我们判定，sbh 是挪到 Windows 里了")]),t._v(" "),n("li",[t._v("022D 并不是字节数，而是单元数，每个单元 8 字节。好处是以前要回收的时候必须要除以 16 再减 1 才能计算归属哪条链表，现在如果 cookie 记录的是 7，那么它就是 7 号链表")]),t._v(" "),n("li",[t._v("需要注意，因为我们观察的这一块是首区块，并没有上一块，所以本来记录上一块大小的 0303 有其他意义")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(824),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("挖出 1024 的空间，观察变化")]),t._v(" "),n("li",[t._v("1024 是 128（80h）个单元，再加上 1 单元的 cookie 和 2 单元的 debug tail，总共 83h。可以发现 cookie 记录的确实是 83h。剩余 22dh-83h = 1aah，也可以对应，我们的目的达成")])]),t._v(" "),n("h1",{attrs:{id:"_6-cinit-startup-第三项大工程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-cinit-startup-第三项大工程"}},[t._v("#")]),t._v(" 6._cinit——startup 第三项大工程")]),t._v(" "),n("p",[n("img",{attrs:{src:a(825),alt:"image.png"}}),t._v(" "),n("img",{attrs:{src:a(826),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("视频缺失")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(827),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("这张图和下一张图是最关键的两张图，讲的是一回事，可以将序号一一对应")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(828),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[n("code",[t._v("_cinit()")]),t._v("使得程序在一开始启动的时候就获得了一个静态的数组，数组里最多 64 个指针，每个指针指向 32 个元素，每个都是 ioinfo，所以程序最多可以开 2048 个广义上的 file")]),t._v(" "),n("li",[n("code",[t._v("GetStartupInfo()")]),t._v("是 Windows 提供的函数，用来取得结构，继承而来的 file handle information 是用指针"),n("code",[t._v("lpReserved2")]),t._v("指的，格式分为三块\n"),n("ul",[n("li",[t._v("字节 0~3 是一个整数值 N，意思是继承了几个 file handle")]),t._v(" "),n("li",[t._v("N 个 osfile 对应 ioinfo 里的 osfile")]),t._v(" "),n("li",[t._v("N 个 OS handle 对应 ioinfo 里的 osfhnd")])])]),t._v(" "),n("li",[n("code",[t._v("fopen()")]),t._v("会从 2048 里找出一个还没有用的拿去用")]),t._v(" "),n("li",[t._v("可以发现 stdin、stdout、stderr 是取"),n("code",[t._v("_iob")]),t._v("的地址，每个"),n("code",[t._v("_iob")]),t._v("都是 FILE")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(829),alt:"image.png"}}),t._v(" "),n("img",{attrs:{src:a(830),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("对应源码，分别取出 N 和两段数据的起始位置，然后 copy")]),t._v(" "),n("li",[t._v("从父亲进程里获得继承而来的 file handle")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(831),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("FILE 里有 8 个东西，每个都是 4 字节，共 32 字节（20h），所以打印出来的地址间隔都是 20h")]),t._v(" "),n("li",[t._v("总共 2048，已经用掉 0、1、2 了，再开一个，发现确实用的是 3")]),t._v(" "),n("li",[n("code",[t._v("fclose()")]),t._v("之后再打印一次，依然可以打印出 3，虽然"),n("code",[t._v("fclose()")]),t._v("会归还 file handle，但并没有清为 0，如果不小心用到它会出错")])]),t._v(" "),n("p",[t._v("其它参考：")])])}),[],!1,null,null,null);s.default=e.exports},811:function(t,s,a){t.exports=a.p+"assets/img/1675351954836-543dc5ca-56ef-4514-867a-f6ecb4e4b211.a0601878.png"},812:function(t,s,a){t.exports=a.p+"assets/img/1675352537182-c93fd20f-584f-446d-be45-9b4cb59206da.a478b8c9.png"},813:function(t,s,a){t.exports=a.p+"assets/img/1675353082412-2d0ef4e3-a984-4eed-94ce-6ce19156f9b1.f5448ab1.png"},814:function(t,s,a){t.exports=a.p+"assets/img/1675353092715-a87f6eb4-2408-4d1d-acb9-35ce3da63d7a.10c865da.png"},815:function(t,s,a){t.exports=a.p+"assets/img/1675353630675-6de1d99e-2ae3-405b-b71c-53d7fcd5a53d.6436e9ac.png"},816:function(t,s,a){t.exports=a.p+"assets/img/1675353642688-5981c4fd-e4ea-4b60-af04-f1ff6264c777.d3af505b.png"},817:function(t,s,a){t.exports=a.p+"assets/img/1675354327323-f62a6259-4bc1-4795-95f6-07cd1b58f066.f6e04e2f.png"},818:function(t,s,a){t.exports=a.p+"assets/img/1675396782564-30634367-1b70-4e1d-a159-4703c00d681f.3c2d8fbf.png"},819:function(t,s,a){t.exports=a.p+"assets/img/1675396802567-d4aff14c-54ed-4aea-8ec6-ad47da686d1a.6e7d6eb3.png"},820:function(t,s,a){t.exports=a.p+"assets/img/1675399196054-55eae861-fc71-4d6e-b0aa-e61154230ce4.8da0b7cc.png"},821:function(t,s,a){t.exports=a.p+"assets/img/1675399216458-4bf6fcea-4d0e-4cee-8218-2f7178300088.1e4d4b91.png"},822:function(t,s,a){t.exports=a.p+"assets/img/1675399413465-9c4e0d95-b1e2-4d0c-b5f1-28a30e179e90.7ab56e38.png"},823:function(t,s,a){t.exports=a.p+"assets/img/1675399850643-c608e0dd-9f2c-4c37-8598-a01ed1d599f2.5658ecfe.png"},824:function(t,s,a){t.exports=a.p+"assets/img/1675400300942-98ff7a95-dd8e-4400-9c97-98bf07a2098b.f8ff2a63.png"},825:function(t,s,a){t.exports=a.p+"assets/img/1675401438829-fa937f21-a562-4ff1-b38e-a6f3c9bf7faf.d4e3da5e.png"},826:function(t,s,a){t.exports=a.p+"assets/img/1675401771565-c78421b8-c340-4683-895b-e120f616a078.76e5e6b8.png"},827:function(t,s,a){t.exports=a.p+"assets/img/1675401511419-afbedcc7-85c3-4323-a21f-043152f25745.c08844f9.png"},828:function(t,s,a){t.exports=a.p+"assets/img/1675401527631-b5a5f811-999c-4dcb-9999-29cb95333b17.a869291c.png"},829:function(t,s,a){t.exports=a.p+"assets/img/1675402310756-72b7c9f5-3cb4-4315-bfca-3d809c756ef6.5ffd24b8.png"},830:function(t,s,a){t.exports=a.p+"assets/img/1675402446693-74cca157-4146-41b0-87e8-e05ce119b365.9b46a16b.png"},831:function(t,s,a){t.exports=a.p+"assets/img/1675402968550-7b14658d-aea9-4a7c-918f-b2386dd171d2.95a040d5.png"}}]);